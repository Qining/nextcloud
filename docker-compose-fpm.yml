version: '3'

services:
  db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - ${LOCAL_DB_DIR}:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    env_file:
      - .env

  redis:
    image: redis:alpine
    restart: always

  nextcloud:
    build:
      context: ./nextcloud
      dockerfile: Dockerfile-fpm
    restart: always
    volumes:
      - ${LOCAL_NEXTCLOUD_DATA_DIR}:/var/www/html
    environment:
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - MYSQL_HOST=db
      - REDIS_HOST=redis
    env_file:
      - .env
    depends_on:
      - db
      - letsencrypt-companion
      - redis
    networks:
      - proxy-tier
      - default
    # To use 'fatrace' to trace IO traffic (debug)
    privileged: true

  web:
    build: ./web
    restart: always
    volumes:
      - ${LOCAL_NEXTCLOUD_DATA_DIR}:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=${MY_NEXTCLOUD_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${MY_NEXTCLOUD_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${MY_NEXTCLOUD_LETSENCRYPT_EMAIL}
    depends_on:
      - nextcloud
    networks:
      - proxy-tier
      - default

  cron:
    image: nextcloud:18.0.4-fpm
    restart: always
    volumes:
      - ${LOCAL_NEXTCLOUD_DATA_DIR}:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - letsencrypt-companion
      - redis
      - nextcloud

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

  duckdns:
    image: linuxserver/duckdns
    restart: always
    environment:
      - SUBDOMAINS=${DUCKDNS_SUBDOMAINS}
      - TOKEN=${DUCKDNS_TOKEN}

volumes:
  certs:
  vhost.d:
  html:

networks:
  proxy-tier:
